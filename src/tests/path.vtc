# looks like -*- vcl -*-

varnishtest "path parameter for the reader constructor"

shell {
	mkdir ${tmpdir}/d1
	mkdir ${tmpdir}/d2
	echo -n "1" > ${tmpdir}/d1/pathtest
	echo -n "2" > ${tmpdir}/d2/pathtest
}

varnish v1 -vcl {
	import ${vmod_file};
	backend b { .host = "${bad_ip}"; }

	sub vcl_init {
		new d1 = file.reader("pathtest",
					path="${tmpdir}/d1:${tmpdir}/d2");
		new d2 = file.reader("pathtest",
					path="${tmpdir}/d2:${tmpdir}/d1");
	}

	sub vcl_recv {
		return (synth(200));
	}

	sub vcl_synth {
		set resp.http.D1 = d1.get();
		set resp.http.D2 = d2.get();
		return (deliver);
	}
} -start

client c1 {
	txreq
	rxresp
	expect resp.status == 200
	expect resp.http.D1 == "1"
	expect resp.http.D2 == "2"
} -run

varnish v1 -vcl {
	import ${vmod_file};
	backend b { .host = "${bad_ip}"; }

	sub vcl_init {
		new d1 = file.reader("pathtest",
					path="${tmpdir}/d1/:${tmpdir}/d2/");
		new d2 = file.reader("pathtest",
					path="${tmpdir}/d2/:${tmpdir}/d1/");
	}

	sub vcl_recv {
		return (synth(200));
	}

	sub vcl_synth {
		set resp.http.D1 = d1.get();
		set resp.http.D2 = d2.get();
		return (deliver);
	}
}

client c1 -run

shell {echo -n "1 only" > ${tmpdir}/d1/pathtest}
shell {echo -n "2 only" > ${tmpdir}/d2/pathtest}

varnish v1 -vcl {
	import ${vmod_file};
	backend b { .host = "${bad_ip}"; }

	sub vcl_init {
		new d1 = file.reader("pathtest", path="${tmpdir}/d1");
		new d2 = file.reader("pathtest", path="${tmpdir}/d2");
	}

	sub vcl_recv {
		return (synth(200));
	}

	sub vcl_synth {
		set resp.http.D1 = d1.get();
		set resp.http.D2 = d2.get();
		return (deliver);
	}
}

client c1 {
	txreq
	rxresp
	expect resp.status == 200
	expect resp.http.D1 == "1 only"
	expect resp.http.D2 == "2 only"
} -run

varnish v1 -vcl {
	import ${vmod_file};
	backend b { .host = "${bad_ip}"; }

	sub vcl_init {
		new tmp1 = file.reader("pathtest", path="${tmpdir}/d1:");
		new tmp2 = file.reader("pathtest", path=":${tmpdir}/d1");
	}

	sub vcl_recv {
		return (synth(200));
	}

	sub vcl_synth {
		set resp.http.Tmp1 = tmp1.get();
		set resp.http.Tmp2 = tmp2.get();
		return (deliver);
	}
}

client c1 {
	txreq
	rxresp
	expect resp.status == 200
	expect resp.http.Tmp1 == "1 only"
	expect resp.http.Tmp2 == "1 only"
} -run

shell {
	touch ${tmpdir}/unreadable
	chmod a-r ${tmpdir}/unreadable
}

varnish v1 -errvcl {new rdr: unreadable not found or not readable on path} {
	import ${vmod_file};
	backend b { .host = "${bad_ip}"; }

	sub vcl_init {
		new rdr = file.reader("unreadable", path="${tmpdir}");
	}
}

shell {rm -f ${tmpdir}/d1/pathtest}
shell {rm -f ${tmpdir}/d2/pathtest}

varnish v1 -errvcl {new rdr: pathtest not found or not readable on path} {
	import ${vmod_file};
	backend b { .host = "${bad_ip}"; }

	sub vcl_init {
		new rdr = file.reader("pathtest",
					path="${tmpdir}/d1:${tmpdir}/d2");
	}
}

varnish v1 -errvcl {new rdr: path is empty} {
	import ${vmod_file};
	backend b { .host = "${bad_ip}"; }

	sub vcl_init {
		new rdr = file.reader("pathtest", path="");
	}
}
