# looks like -*- vcl -*-

varnishtest "reader constructor and .get()"

shell {echo -n "foo bar baz quux" > ${tmpdir}/file}

varnish v1 -vcl+backend {
	import ${vmod_file};
	backend b { .host = "${bad_ip}"; }

	sub vcl_init {
		new rdr = file.reader("${tmpdir}/file");
	}

	sub vcl_recv {
		return (synth(200));
	}

	sub vcl_synth {
		set resp.http.Get = rdr.get();
		return (deliver);
	}
} -start

client c1 {
	txreq
	rxresp
	expect resp.status == 200
	expect resp.http.Get == "foo bar baz quux"
} -run

varnish v1 -vcl+backend {
	import ${vmod_file};
	backend b { .host = "${bad_ip}"; }

	sub vcl_init {
		new rdr = file.reader("${tmpdir}/file", ttl=0.1s);
	}

	sub vcl_recv {
		set req.http.Get = rdr.get();
		return (synth(200));
	}

	sub vcl_synth {
		set resp.http.Get = req.http.Get;
		return (deliver);
	}
}

# Run twice with a delay between, to test the "no change" case.
client c1 -run
delay .1
client c1 -run

shell {echo -n "quux baz bar foo" > ${tmpdir}/file}
delay .1

client c1 {
	txreq
	rxresp
	expect resp.status == 200
	expect resp.http.Get == "quux baz bar foo"
} -run

shell {rm -f ${tmpdir}/file}
delay .1

client c1 {
	txreq
	rxresp
	expect resp.status == 503
	expect resp.reason == "VCL failed"
} -run

logexpect l1 -v v1 -d 1 -g vxid -q "VCL_Error" {
	expect 0 * Begin	req
	expect * = VCL_Error	{^rdr\.get\(\): vmod file failure: rdr: cannot read info about}
	expect * = End
} -run

logexpect l1 -v v1 -d 1 -g raw -q "Error" {
	expect * 0 Error	{^vmod file failure: rdr: cannot read info about}
} -run
