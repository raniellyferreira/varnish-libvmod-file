#! /bin/bash -ex

# Build script for a VMOD file el7 RPM
# to be run in the rpmbuild/centos7 docker container.

# Env variables VERSION and RELEASE MUST be set in the docker invocation.
# DIST is set by the rpmbuild/centos7 container.

# The directory mounted to /srv MUST contain these files:
# - this script (named pkg)
# - VMOD file tarball (vmod-file-$VERSION.tar.gz)
# - RPM spec file (vmod-file.spec)
# - yum repo config for varnish63@packagecloud (varnishcache_varnish63.repo)
#   (see https://packagecloud.io/varnishcache/varnish63/install#manual-rpm)

# Sample docker invocation:
# $ docker run -t -v $PWD:/srv -e VERSION=47.1.1 -e RELEASE=815 \
#       rpmbuild/centos7 /srv/pkg

# At the end of the run, binary, source and debuginfo RPMs are in the
# directory mounted to /srv.

if [ -z $VERSION ]; then
   echo "Env variable VERSION MUST be set"
   exit 1
fi

if [ -z $RELEASE ]; then
   echo "Env variable RELEASE MUST be set"
   exit 1
fi

# delete the peculiar macros from the rpmbuild/centos7 image
rm /home/builder/.rpmmacros

# set up the build environment
cd /home/builder
mkdir -p rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}
cp /srv/vmod-file.spec rpmbuild/SPECS
cp /srv/vmod-file-${VERSION}.tar.gz rpmbuild/SOURCES

# install epel7 repo
sudo yum install -y -q epel-release

# set up varnish repo
sudo cp /srv/varnishcache_varnish63.repo /etc/yum.repos.d/

sudo yum -q makecache -y fast

# build requirements
sudo yum install -y -q varnish-devel pkgconfig make gcc python-docutils

# build RPMs
rpmbuild -ba -D "dist .${DIST}" \
         -D "_version ${VERSION}" \
         -D "_release ${RELEASE}" \
         rpmbuild/SPECS/vmod-file.spec

sudo cp rpmbuild/RPMS/*/* /srv
sudo cp rpmbuild/SRPMS/* /srv
